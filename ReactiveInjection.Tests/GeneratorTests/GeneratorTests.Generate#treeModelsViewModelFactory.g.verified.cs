//HintName: treeModelsViewModelFactory.g.cs
//This file was automatically generated by the ReactiveInjection source generator.
//Do not edit this file manually since it will be automatically overwritten.
#nullable disable
namespace Tree.Models
{
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ReactiveInjection", "1.0.0.0")]
    partial class ViewModelFactory
    {
        private readonly global::Tree.Models.Service treeModelsService; //Dependency injected service
        private readonly global::System.Collections.Generic.List<int> systemCollectionsGenericList_int; //Dependency injected service
        private readonly global::System.Collections.Generic.List<int[]> systemCollectionsGenericList_intArray; //Dependency injected service
        private readonly global::System.IServiceProvider systemIServiceProvider; //Dependency injected service

        public ViewModelFactory(global::Tree.Models.Service treeModelsService, global::System.Collections.Generic.List<int> systemCollectionsGenericList_int, global::System.Collections.Generic.List<int[]> systemCollectionsGenericList_intArray, global::System.IServiceProvider systemIServiceProvider)
        {
            this.treeModelsService = treeModelsService;
            this.systemCollectionsGenericList_int = systemCollectionsGenericList_int;
            this.systemCollectionsGenericList_intArray = systemCollectionsGenericList_intArray;
            this.systemIServiceProvider = systemIServiceProvider;
        }

        private readonly global::Tree.Models.SharedState treeModelsSharedState = new global::Tree.Models.SharedState(); //Shared state
        private readonly global::System.Collections.ObjectModel.ObservableCollection<global::Tree.Models.SharedState> systemCollectionsObjectModelObservableCollection_TreeModelsSharedState = new global::System.Collections.ObjectModel.ObservableCollection<global::Tree.Models.SharedState>(); //Shared state

        public global::Tree.Models.ViewModel1 ViewModel1(global::Tree.Models.Model model)
        {
            return new global::Tree.Models.ViewModel1(this.treeModelsSharedState, model, this.treeModelsService, this.systemCollectionsGenericList_int, this.systemCollectionsGenericList_intArray);
        }

        public global::Tree.Models.ViewModel2 ViewModel2(global::Tree.Models.ViewModelFactory factory)
        {
            return new global::Tree.Models.ViewModel2(this.treeModelsSharedState, this, this.treeModelsService, this.systemIServiceProvider);
        }

        public global::Tree.Models.ViewModel3 ViewModel3(string str, string str2)
        {
            return new global::Tree.Models.ViewModel3(str, this.systemCollectionsObjectModelObservableCollection_TreeModelsSharedState, str2);
        }

        public global::Tree.Models.ViewModel4 ViewModel4()
        {
            return new global::Tree.Models.ViewModel4(this.treeModelsSharedState);
        }

        public global::Tree.Models.ViewModel5 ViewModel5(global::System.Collections.ObjectModel.ReadOnlyObservableCollection<global::Tree.Models.SharedState> parameter)
        {
            return new global::Tree.Models.ViewModel5(parameter);
        }

        public global::Tree.Models.ViewModel6 ViewModel6()
        {
            return new global::Tree.Models.ViewModel6();
        }
    }
}
